name: Deploy to Azure

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  AZURE_RESOURCE_GROUP: asset-manager-rg
  AZURE_WEB_APP_NAME: asset-manager-web
  AZURE_WORKER_APP_NAME: asset-manager-worker

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
    
    - name: Cache Maven packages
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    
    - name: Build with Maven
      run: ./mvnw clean package -DskipTests
    
    - name: Upload Web App artifact
      uses: actions/upload-artifact@v3
      with:
        name: web-app
        path: web/target/*.jar
    
    - name: Upload Worker App artifact
      uses: actions/upload-artifact@v3
      with:
        name: worker-app
        path: worker/target/*.jar

  deploy-infrastructure:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: Deploy ARM Template
      uses: azure/arm-deploy@v1
      with:
        subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        resourceGroupName: ${{ env.AZURE_RESOURCE_GROUP }}
        template: .modernization/azure-resources.json
        parameters: |
          resourceNamePrefix=asset-manager
          databaseAdminUsername=${{ secrets.DB_ADMIN_USERNAME }}
          databaseAdminPassword=${{ secrets.DB_ADMIN_PASSWORD }}

  deploy-web-app:
    needs: [build, deploy-infrastructure]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Download Web App artifact
      uses: actions/download-artifact@v3
      with:
        name: web-app
    
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: Deploy to Azure Web App
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AZURE_WEB_APP_NAME }}
        package: '*.jar'

  deploy-worker-app:
    needs: [build, deploy-infrastructure]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Download Worker App artifact
      uses: actions/download-artifact@v3
      with:
        name: worker-app
    
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: Deploy to Azure Web App
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AZURE_WORKER_APP_NAME }}
        package: '*.jar'

  test:
    needs: [deploy-web-app, deploy-worker-app]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
    
    - name: Run integration tests
      run: ./mvnw test -Dspring.profiles.active=azure
      env:
        AZURE_WEB_APP_URL: https://${{ env.AZURE_WEB_APP_NAME }}.azurewebsites.net
        AZURE_WORKER_APP_URL: https://${{ env.AZURE_WORKER_APP_NAME }}.azurewebsites.net
{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "resourceNamePrefix": {
      "type": "string",
      "defaultValue": "asset-manager",
      "metadata": {
        "description": "Prefix for all resource names"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources"
      }
    },
    "databaseAdminUsername": {
      "type": "string",
      "metadata": {
        "description": "Administrator username for PostgreSQL"
      }
    },
    "databaseAdminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Administrator password for PostgreSQL"
      }
    }
  },
  "variables": {
    "storageAccountName": "[concat(parameters('resourceNamePrefix'), 'storage')]",
    "serviceBusNamespaceName": "[concat(parameters('resourceNamePrefix'), '-sb')]",
    "postgreSQLServerName": "[concat(parameters('resourceNamePrefix'), '-db')]",
    "appServicePlanName": "[concat(parameters('resourceNamePrefix'), '-plan')]",
    "webAppName": "[concat(parameters('resourceNamePrefix'), '-web')]",
    "workerAppName": "[concat(parameters('resourceNamePrefix'), '-worker')]",
    "keyVaultName": "[concat(parameters('resourceNamePrefix'), '-kv')]",
    "appConfigName": "[concat(parameters('resourceNamePrefix'), '-config')]",
    "appInsightsName": "[concat(parameters('resourceNamePrefix'), '-insights')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2021-09-01",
      "name": "[variables('storageAccountName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2",
      "properties": {
        "accessTier": "Hot"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2021-09-01",
      "name": "[concat(variables('storageAccountName'), '/default/assets')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ],
      "properties": {
        "publicAccess": "None"
      }
    },
    {
      "type": "Microsoft.ServiceBus/namespaces",
      "apiVersion": "2021-11-01",
      "name": "[variables('serviceBusNamespaceName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard"
      }
    },
    {
      "type": "Microsoft.ServiceBus/namespaces/queues",
      "apiVersion": "2021-11-01",
      "name": "[concat(variables('serviceBusNamespaceName'), '/image-processing')]",
      "dependsOn": [
        "[resourceId('Microsoft.ServiceBus/namespaces', variables('serviceBusNamespaceName'))]"
      ],
      "properties": {
        "maxDeliveryCount": 3,
        "defaultMessageTimeToLive": "P14D"
      }
    },
    {
      "type": "Microsoft.DBforPostgreSQL/flexibleServers",
      "apiVersion": "2021-06-01",
      "name": "[variables('postgreSQLServerName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard_B1ms",
        "tier": "Burstable"
      },
      "properties": {
        "administratorLogin": "[parameters('databaseAdminUsername')]",
        "administratorLoginPassword": "[parameters('databaseAdminPassword')]",
        "version": "14",
        "storage": {
          "storageSizeGB": 32
        },
        "backup": {
          "backupRetentionDays": 7,
          "geoRedundantBackup": "Disabled"
        },
        "highAvailability": {
          "mode": "Disabled"
        }
      }
    },
    {
      "type": "Microsoft.DBforPostgreSQL/flexibleServers/databases",
      "apiVersion": "2021-06-01",
      "name": "[concat(variables('postgreSQLServerName'), '/assets_manager')]",
      "dependsOn": [
        "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', variables('postgreSQLServerName'))]"
      ]
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2021-03-01",
      "name": "[variables('appServicePlanName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "B1",
        "tier": "Basic"
      },
      "kind": "linux",
      "properties": {
        "reserved": true
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2021-03-01",
      "name": "[variables('webAppName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]"
      ],
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
        "siteConfig": {
          "linuxFxVersion": "JAVA|11-java11",
          "appSettings": [
            {
              "name": "SPRING_PROFILES_ACTIVE",
              "value": "azure"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2021-03-01",
      "name": "[variables('workerAppName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]"
      ],
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
        "siteConfig": {
          "linuxFxVersion": "JAVA|11-java11",
          "appSettings": [
            {
              "name": "SPRING_PROFILES_ACTIVE",
              "value": "azure"
            },
            {
              "name": "SERVER_PORT",
              "value": "8081"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2021-11-01-preview",
      "name": "[variables('keyVaultName')]",
      "location": "[parameters('location')]",
      "properties": {
        "sku": {
          "family": "A",
          "name": "standard"
        },
        "tenantId": "[subscription().tenantId]",
        "accessPolicies": []
      }
    },
    {
      "type": "Microsoft.AppConfiguration/configurationStores",
      "apiVersion": "2021-10-01-preview",
      "name": "[variables('appConfigName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "free"
      }
    },
    {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2020-02-02",
      "name": "[variables('appInsightsName')]",
      "location": "[parameters('location')]",
      "kind": "web",
      "properties": {
        "Application_Type": "web"
      }
    }
  ],
  "outputs": {
    "storageAccountConnectionString": {
      "type": "string",
      "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2021-09-01').keys[0].value)]"
    },
    "serviceBusConnectionString": {
      "type": "string",
      "value": "[listKeys(resourceId('Microsoft.ServiceBus/namespaces/authorizationRules', variables('serviceBusNamespaceName'), 'RootManageSharedAccessKey'), '2021-11-01').primaryConnectionString]"
    },
    "postgreSQLConnectionString": {
      "type": "string",
      "value": "[concat('Server=', reference(resourceId('Microsoft.DBforPostgreSQL/flexibleServers', variables('postgreSQLServerName'))).fullyQualifiedDomainName, ';Database=assets_manager;Port=5432;User Id=', parameters('databaseAdminUsername'), ';Password=', parameters('databaseAdminPassword'), ';Ssl Mode=Require;')]"
    },
    "webAppUrl": {
      "type": "string",
      "value": "[concat('https://', reference(resourceId('Microsoft.Web/sites', variables('webAppName'))).defaultHostName)]"
    },
    "workerAppUrl": {
      "type": "string",
      "value": "[concat('https://', reference(resourceId('Microsoft.Web/sites', variables('workerAppName'))).defaultHostName)]"
    }
  }
}